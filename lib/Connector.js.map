{"version":3,"sources":["../src/Connector.jsx"],"names":["Connector","props","setActions","setProps","connects","context","appstores","appstates","appactions","connectors","state","actions","id","uniqueId","updates","update","setState","component","children","createElement","cloneElement","Component","contextTypes","object","isRequired","defaulProps","propTypes","func","element"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,S;;;;;;;;;;;yCACiB;AAAA;;AAAA,mBACwB,KAAKC,KAD7B;AAAA,UACXC,UADW,UACXA,UADW;AAAA,UACCC,QADD,UACCA,QADD;AAAA,UACWC,QADX,UACWA,QADX;AAAA,+BAE2B,KAAKC,OAAL,CAAaC,SAFxC;AAAA,UAEXC,SAFW,sBAEXA,SAFW;AAAA,UAEAC,UAFA,sBAEAA,UAFA;AAAA,UAEYC,UAFZ,sBAEYA,UAFZ;;AAGnB,WAAKC,KAAL,GAAaP,SAASI,SAAT,CAAb;AACA,WAAKI,OAAL,GAAeT,WAAWM,UAAX,CAAf;AACA,WAAKI,EAAL,GAAU,iBAAEC,QAAF,CAAW,YAAX,CAAV;AACA,WAAKC,OAAL,GAAe,CAAf;AACAL,iBAAW,KAAKG,EAAhB,IAAsB;AACpBG,gBAAQ,kBAAM;AACZ,iBAAKC,QAAL,CAAcb,SAASI,SAAT,CAAd;AACA,iBAAKO,OAAL;AACD,SAJmB;AAKpBV;AALoB,OAAtB;AAOD;;;2CACsB;AACrB,UAAI,KAAKC,OAAL,CAAaC,SAAb,CAAuBG,UAAvB,CAAkC,KAAKG,EAAvC,CAAJ,EAAgD;AAC9C,eAAO,KAAKP,OAAL,CAAaC,SAAb,CAAuBG,UAAvB,CAAkC,KAAKG,EAAvC,CAAP;AACD;AACF;;;6BACQ;AAAA,oBACgC,KAAKX,KADrC;AAAA,UACCgB,SADD,WACCA,SADD;AAAA,UACYC,QADZ,WACYA,QADZ;AAAA,UACsBjB,KADtB,WACsBA,KADtB;;AAEP,UAAIgB,SAAJ,EAAe;AACb,eAAO,gBAAME,aAAN,CAAoBF,SAApB,eAAoChB,KAApC,EAA8C,KAAKU,OAAnD,EAA+D,KAAKD,KAApE,EAAP;AACD;AACD,UAAIQ,QAAJ,EAAc;AACZ,eAAO,gBAAME,YAAN,CAAmBF,QAAnB,eAAkCjB,KAAlC,EAA4C,KAAKU,OAAjD,EAA6D,KAAKD,KAAlE,EAAP;AACD;AACD,aAAO,IAAP;AACD;;;;EA9BqB,gBAAMW,S;;AAgC9BrB,UAAUsB,YAAV,GAAyB;AACvBhB,aAAW,iBAAUiB,MAAV,CAAiBC;AADL,CAAzB;AAGAxB,UAAUyB,WAAV,GAAwB;AACtBvB,cAAY,sBAAM,CAAE,CADE;AAEtBC,YAAU,oBAAM,CAAE,CAFI;AAGtBC,YAAU,EAHY;AAItBH,SAAO;AAJe,CAAxB;AAMAD,UAAU0B,SAAV,GAAsB;AACpBxB,cAAY,iBAAUyB,IADF;AAEpBxB,YAAU,iBAAUwB,IAFA;AAGpBvB,YAAU,iBAAUmB,MAHA;AAIpBN,aAAW,iBAAUU,IAJD;AAKpBT,YAAU,iBAAUU,OALA;AAMpB3B,SAAO,iBAAUsB;AANG,CAAtB;kBAQevB,S","file":"Connector.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport _ from 'lodash'\n\nclass Connector extends React.Component {\n  componentWillMount() {\n    const { setActions, setProps, connects } = this.props\n    const { appstates, appactions, connectors } = this.context.appstores\n    this.state = setProps(appstates)\n    this.actions = setActions(appactions)\n    this.id = _.uniqueId('connector_')\n    this.updates = 0\n    connectors[this.id] = {\n      update: () => {\n        this.setState(setProps(appstates))\n        this.updates++\n      },\n      connects,\n    }\n  }\n  componentWillUnmount() {\n    if (this.context.appstores.connectors[this.id]) {\n      delete this.context.appstores.connectors[this.id]\n    }\n  }\n  render() {\n    const { component, children, props } = this.props\n    if (component) {\n      return React.createElement(component, { ...props, ...this.actions, ...this.state })\n    }\n    if (children) {\n      return React.cloneElement(children, { ...props, ...this.actions, ...this.state })\n    }\n    return null\n  }\n}\nConnector.contextTypes = {\n  appstores: PropTypes.object.isRequired,\n}\nConnector.defaulProps = {\n  setActions: () => {},\n  setProps: () => {},\n  connects: {},\n  props: {},\n}\nConnector.propTypes = {\n  setActions: PropTypes.func,\n  setProps: PropTypes.func,\n  connects: PropTypes.object,\n  component: PropTypes.func,\n  children: PropTypes.element,\n  props: PropTypes.object,\n}\nexport default Connector\n"]}