{"version":3,"sources":["../src/Connector.jsx"],"names":["Connector","state","update","props","setProps","connects","context","storeSet","stores","connectors","id","uniqueId","setState","component","children","createElement","actions","cloneElement","states","Component","contextTypes","object","isRequired","defaulProps","propTypes","setActions","func","element"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,S;;;;;;;;;;;;;;4LACJC,K,GAAQ;AACNC,cAAQ;AADF,K;;;;;yCAGa;AAAA;;AAAA,mBACY,KAAKC,KADjB;AAAA,UACXC,QADW,UACXA,QADW;AAAA,UACDC,QADC,UACDA,QADC;AAAA,8BAEY,KAAKC,OAAL,CAAaC,QAFzB;AAAA,UAEXC,MAFW,qBAEXA,MAFW;AAAA,UAEHC,UAFG,qBAEHA,UAFG;;AAGnB,WAAKC,EAAL,GAAU,iBAAEC,QAAF,CAAW,YAAX,CAAV;AACAF,iBAAW,KAAKC,EAAhB,IAAsB;AACpBR,gBAAQ;AAAA,iBAAM,OAAKU,QAAL,CAAc,EAAEV,QAAQ,OAAKD,KAAL,CAAWC,MAAX,GAAoB,CAA9B,EAAd,CAAN;AAAA,SADY;AAEpBG,kBAAUA,YAAY;AAFF,OAAtB;AAID;;;2CACsB;AACrB,UAAI,KAAKC,OAAL,CAAaC,QAAb,CAAsBE,UAAtB,CAAiC,KAAKC,EAAtC,CAAJ,EAA+C;AAC7C,eAAO,KAAKJ,OAAL,CAAaC,QAAb,CAAsBE,UAAtB,CAAiC,KAAKC,EAAtC,CAAP;AACD;AACF;;;6BACQ;AAAA,oBAC0C,KAAKP,KAD/C;AAAA,UACCU,SADD,WACCA,SADD;AAAA,UACYC,QADZ,WACYA,QADZ;AAAA,UACsBX,KADtB,WACsBA,KADtB;AAAA,UAC6BC,QAD7B,WAC6BA,QAD7B;AAAA,UAECI,MAFD,GAEY,KAAKF,OAAL,CAAaC,QAFzB,CAECC,MAFD;;AAGP,UAAIK,SAAJ,EAAe;AACb,eAAO,gBAAME,aAAN,CACLF,SADK,eAEAV,KAFA,EAEU,KAAKa,OAFf,EAE2BZ,SAASI,MAAT,CAF3B,EAAP;AAID;AACD,UAAIM,QAAJ,EAAc;AACZ,eAAO,gBAAMG,YAAN,CACLH,QADK,eAEAX,KAFA,EAEU,KAAKa,OAFf,EAE2BZ,SAASc,MAAT,EAAiBF,OAAjB,CAF3B,EAAP;AAID;AACD,aAAO,IAAP;AACD;;;;EAlCqB,gBAAMG,S;;AAoC9BnB,UAAUoB,YAAV,GAAyB;AACvBb,YAAU,iBAAUc,MAAV,CAAiBC;AADJ,CAAzB;AAGAtB,UAAUuB,WAAV,GAAwB;AACtBnB,YAAU,oBAAM,CAAE,CADI;AAEtBC,YAAU,EAFY;AAGtBF,SAAO;AAHe,CAAxB;AAKAH,UAAUwB,SAAV,GAAsB;AACpBC,cAAY,iBAAUC,IADF;AAEpBtB,YAAU,iBAAUsB,IAAV,CAAeJ,UAFL;AAGpBjB,YAAU,iBAAUgB,MAHA;AAIpBR,aAAW,iBAAUa,IAJD;AAKpBZ,YAAU,iBAAUa,OALA;AAMpBxB,SAAO,iBAAUkB;AANG,CAAtB;kBAQerB,S","file":"Connector.js","sourcesContent":["import React, { PropTypes } from 'react'\nimport _ from 'lodash'\n\nclass Connector extends React.Component {\n  state = {\n    update: 0,\n  }\n  componentWillMount() {\n    const { setProps, connects } = this.props\n    const { stores, connectors } = this.context.storeSet\n    this.id = _.uniqueId('connector_')\n    connectors[this.id] = {\n      update: () => this.setState({ update: this.state.update + 1 }),\n      connects: connects || {},\n    }\n  }\n  componentWillUnmount() {\n    if (this.context.storeSet.connectors[this.id]) {\n      delete this.context.storeSet.connectors[this.id]\n    }\n  }\n  render() {\n    const { component, children, props, setProps } = this.props\n    const { stores } = this.context.storeSet\n    if (component) {\n      return React.createElement(\n        component,\n        { ...props, ...this.actions, ...setProps(stores) },\n      )\n    }\n    if (children) {\n      return React.cloneElement(\n        children,\n        { ...props, ...this.actions, ...setProps(states, actions) }\n      )\n    }\n    return null\n  }\n}\nConnector.contextTypes = {\n  storeSet: PropTypes.object.isRequired,\n}\nConnector.defaulProps = {\n  setProps: () => {},\n  connects: {},\n  props: {},\n}\nConnector.propTypes = {\n  setActions: PropTypes.func,\n  setProps: PropTypes.func.isRequired,\n  connects: PropTypes.object,\n  component: PropTypes.func,\n  children: PropTypes.element,\n  props: PropTypes.object,\n}\nexport default Connector\n"]}