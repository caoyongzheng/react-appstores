{"version":3,"sources":["../src/DispatchListener.jsx"],"names":["DispatchListener","props","name","type","handle","handler","id","context","storeSet","addDispatchListener","removeDispatchListener","children","Component","contextTypes","object","isRequired","defaultProps","propTypes","string","func"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,gB;;;;;;;;;;;yCACiB;AAAA,mBACY,KAAKC,KADjB;AAAA,UACXC,IADW,UACXA,IADW;AAAA,UACLC,IADK,UACLA,IADK;AAAA,UACCC,MADD,UACCA,MADD;;AAEnB,WAAKF,IAAL,GAAYA,IAAZ;AACA,eAASG,OAAT,CAAiBJ,KAAjB,EAAwB;AACtB,YAAIA,MAAME,IAAN,KAAeA,IAAf,IAAuBA,SAAS,GAApC,EAAyC;AACvCC,iBAAOH,KAAP;AACD;AACF;AACD,WAAKK,EAAL,GAAU,KAAKC,OAAL,CAAaC,QAAb,CAAsBC,mBAAtB,CACR,KAAKP,IADG,EAERG,OAFQ,CAAV;AAID;;;2CACsB;AACrB,WAAKE,OAAL,CAAaC,QAAb,CAAsBE,sBAAtB,CAA6C,KAAKR,IAAlD,EAAwD,KAAKI,EAA7D;AACD;;;6BACQ;AAAA,UACCK,QADD,GACc,KAAKV,KADnB,CACCU,QADD;;AAEP,aAAOA,YAAY,IAAnB;AACD;;;;EApB4B,gBAAMC,S;;AAsBrCZ,iBAAiBa,YAAjB,GAAgC;AAC9BL,YAAU,iBAAUM,MAAV,CAAiBC;AADG,CAAhC;AAGAf,iBAAiBgB,YAAjB,GAAgC;AAC9Bb,QAAM;AADwB,CAAhC;AAGAH,iBAAiBiB,SAAjB,GAA6B;AAC3Bf,QAAM,iBAAUgB,MAAV,CAAiBH,UADI;AAE3BZ,QAAM,iBAAUe,MAFW;AAG3Bb,WAAS,iBAAUc,IAAV,CAAeJ;AAHG,CAA7B;kBAKef,gB","file":"DispatchListener.js","sourcesContent":["import React, { PropTypes } from 'react'\n\nclass DispatchListener extends React.Component {\n  componentWillMount() {\n    const { name, type, handle } = this.props\n    this.name = name\n    function handler(props) {\n      if (props.type === type || type === '*') {\n        handle(props)\n      }\n    }\n    this.id = this.context.storeSet.addDispatchListener(\n      this.name,\n      handler,\n    )\n  }\n  componentWillUnmount() {\n    this.context.storeSet.removeDispatchListener(this.name, this.id)\n  }\n  render() {\n    const { children } = this.props\n    return children || null\n  }\n}\nDispatchListener.contextTypes = {\n  storeSet: PropTypes.object.isRequired,\n}\nDispatchListener.defaultProps = {\n  type: '*'\n}\nDispatchListener.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  handler: PropTypes.func.isRequired,\n}\nexport default DispatchListener\n"]}